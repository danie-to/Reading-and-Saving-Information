#include <iostream>
#include <fstream>
#include <string>
using namespace std;

struct UserData {
    string FirstName, LastName, Address, Section, YearLevel;
};

// Function prototypes
void DataDisplay(const UserData &u);
UserData newUser(const string &fileName);
UserData LoadUserData(const string &fileName);
void saveUser(const string &fileName, const UserData &u);
string AskUserInput(const string &question);

int main() {
    UserData user;
    int input;
    string fileName;
    
    cout << "Welcome! Do you have an existing account?\n[1] Yes\n[2] No\n";
    cin >> input;

    switch(input) {
        case 1: {
            fileName = AskUserInput("Please enter your last name: \n");
            ifstream file(fileName + ".txt");
            if (file) {
                user = LoadUserData(fileName);
            } else {
                user = newUser(fileName);
            }
            break;
        }
        case 2: {
            user = newUser(fileName);
            break;
        }
        default: {
            cout << "Invalid input.\n";
            return 0;
        }
    }

    DataDisplay(user);
    cout << "\nData successfully displayed! Would you like to make any changes?\n[1] Yes\n[2] No\n";
    cin >> input;

    switch(input) {
        case 1: {
            cout << "\nWhich information would you like to make changes to?\n[1] First name\n[2] Last name\n[3] Address\n[4] Year level\n[5] Section\n";
            cin >> input;
            switch(input) {
                case 1:
                    cout << "\nEnter first name: \n";
                    cin >> user.FirstName;
                    break;
                case 2:
                    cout << "Enter last name: \n";
                    cin >> user.LastName;
                    break;
                case 3:
                    cout << "Enter address: \n";
                    cin.ignore(); // Ignore previous newline character
                    getline(cin, user.Address);
                    break;
                case 4:
                    cout << "Enter year level: \n";
                    cin >> user.YearLevel;
                    break;
                case 5:
                    cout << "Enter your section: \n";
                    cin >> user.Section;
                    break;
                default:
                    cout << "\nInvalid input.\n";
                    return 0;
            }
            DataDisplay(user);
            break;
        }
        case 2: {
            cout << "\nWould you like to save your data?\n[1] Yes\n[2] No\n";
            cin >> input;
            switch(input) {
                case 1:
                    fileName = user.LastName;
                    saveUser(fileName, user);
                    break;
                case 2:
                    return 0;
                default:
                    cout << "\nInvalid input.\n";
                    return 0;
            }
            break;
        }
        default: {
            cout << "\nInvalid input.\n";
            return 0;
        }
    }
    
    return 0;
}

void DataDisplay(const UserData &u) {
    cout << "\nFirst name: " << u.FirstName << endl;
    cout << "Last name: " << u.LastName << endl;
    cout << "Address: " << u.Address << endl;
    cout << "Year level: " << u.YearLevel << endl;
    cout << "Section: " << u.Section << endl;
}

UserData newUser(const string &fileName) {
    UserData user;
    ofstream file(fileName + ".txt");
    if (!file.is_open()) {
        cout << "Error opening file.\n";
        return user;
    }
    
    cout << "\n=== Make a new account ===\n";
    cout << "Enter first name: \n";
    cin >> user.FirstName;
    file << user.FirstName << endl;
    
    cout << "Enter last name: \n";
    cin >> user.LastName;
    file << user.LastName << endl;
    
    cout << "Enter address: \n";
    cin.ignore(); // Ignore previous newline character
    getline(cin, user.Address);
    file << user.Address << endl;
    
    cout << "Enter year level: \n";
    cin >> user.YearLevel;
    file << user.YearLevel << endl;
    
    cout << "Enter your section: \n";
    cin >> user.Section;
    file << user.Section << endl;
    
    file.close();
    return user;
}

UserData LoadUserData(const string &fileName) {
    UserData u;
    ifstream file(fileName + ".txt");
    if (!file.is_open()) {
        cout << "Error opening file.\n";
        return u;
    }
    
    getline(file, u.FirstName);
    getline(file, u.LastName);
    getline(file, u.Address);
    getline(file, u.YearLevel);
    getline(file, u.Section);
    
    file.close();
    return u;
}

void saveUser(const string &fileName, const UserData &u) {
    ofstream file(fileName + ".txt");
    if (!file.is_open()) {
        cout << "Error opening file.\n";
        return;
    }
    
    file << u.FirstName << endl;
    file << u.LastName << endl;
    file << u.Address << endl;
    file << u.YearLevel << endl;
    file << u.Section << endl;
    
    file.close();
    cout << "Your file has been successfully saved.\n";
}

string AskUserInput(const string &question) {
    cout << question;
    string input;
    getline(cin >> ws, input);
    return input;
}
